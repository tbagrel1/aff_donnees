#!/usr/bin/python3
# -*- coding: utf-8 -*-

	# Import des librairies #

import os
from tkinter import *
from threading import *
import time
import sys

# Définition des classes et fonctions :

class aThread(Thread) :

	def __init__(self, threadID, name, function) : 
		Thread.__init__(self)
		self.threadID = threadID
		self.name = name
		self.function = function

	def run(self) :
		print("Starting " + self.name + " : " + str(self.threadID) + " (" +\
self.function + ")")
		exec(self.function)
		print("Exiting " + self.name + " : " + str(self.threadID) + " (" +\
self.function + ")")

def toThread(threadID, name, function) :
	exec("global Thread_" + str(threadID))
	exec("Thread_" + str(threadID) + " = aThread(" + str(threadID) + ", \"" +\
name + "\", \"" + function + "\")")
	exec("Thread_" + str(threadID) + ".daemon = True")
	exec("Thread_" + str(threadID) + ".start()")

def recup_conso():
	try:
		ifc = os.popen("ifconfig")
		ifc_result = ifc.read()
		conso_brut = (ifc_result.split("\n"))[16]
		split = conso_brut.split("Octet")
		dor_b = split[1]
		doe_b = split[2]
		split = dor_b.split(":")
		dor_b = split[1]
		split = doe_b.split(":")
		doe_b = split[1]
		split = dor_b.split(" ")
		dor = int(split[0])
		split = doe_b.split(" ")
		doe = int(split[0])
		return (dor, doe)
	except:
		return (0, 0)

def maj_conso():
	while True:
		lb10.configure(text=str(round((recup_conso())[0]/1048576, 2)) + " Mo")
		lb11.configure(text=str(round((recup_conso())[1]/1048576, 2)) + " Mo")
		lb12.configure(text=str(round(((recup_conso())[0] + (recup_conso())[1])/1048576 ,2)) + " Mo")
		time.sleep(float(sys.argv[1]))

	# Défintion du main #

Master = Tk()
Master.title("Données")
Master.protocol("WM_DELETE_WINDOWS", Master.quit)

lb00 = Label(Master, text="Reçu", justify=CENTER)
lb01 = Label(Master, text="Émis", justify=CENTER)
lb02 = Label(Master, text="Total", justify=CENTER)

lb10 = Label(Master, text="0.00 MB", justify=CENTER, relief=SUNKEN)
lb11 = Label(Master, text="0.00 MB", justify=CENTER, relief=SUNKEN)
lb12 = Label(Master, text="0.00 MB", justify=CENTER, relief=SUNKEN)

for rn in range(2):
	for cn in range(3):
		exec("lb" + str(rn) + str(cn) + ".grid(row=" + str(rn) + ", column=" + str(cn) + ", sticky=W+E+N+S)")

toThread(0, "afficher", "maj_conso()")

Master.mainloop()
Master.destroy()

# Je dois récupérer la 17e ligne de ifconfig
